name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { binary-version: "2.13", java-version: "adopt@1.11" }

    steps:
    - uses: actions/checkout@v3
    - uses: olafurpg/setup-scala@v14
      with:
        java-version: ${{ matrix.scala.java-version }}

    - name: Cache SBT
      uses: actions/cache@v3.3.1
      with:
        path: |
          ~/.ivy2/cache
          ~/.cache/coursier
          ~/.sbt
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
        restore-keys: |
          ${{ runner.os }}-sbt

    - name: sbt GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
      run: |
        echo "Run] sbt GitHub release"
        echo 'sbt -J-Xmx2048m devOopsGitHubRelease'
        sbt \
          -J-XX:MaxMetaspaceSize=1024m \
          -J-Xmx2048m \
          devOopsGitHubRelease

    - name: sbt Publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
      run: |
        echo "Run] sbt ci-release"
        export SOURCE_DATE_EPOCH=$(date +%s)
        echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
        echo 'sbt -J-XX:MaxMetaspaceSize=1024m -J-Xmx2048m -v clean +test +packagedArtifacts ci-release devOopsGitHubReleaseUploadArtifacts'
        sbt \
        -J-XX:MaxMetaspaceSize=1024m \
        -J-Xmx2048m \
        -v \
        clean \
        test \
        packagedArtifacts \
        ci-release \
        devOopsGitHubReleaseUploadArtifacts
